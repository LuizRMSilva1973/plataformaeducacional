services:
  db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: edu_platform
    ports:
      - "55432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d edu_platform"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - dbdata:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    environment:
      # Ajuste conforme necessidade
      DATABASE_URL: postgresql://postgres:postgres@db:5432/edu_platform?schema=public
      JWT_SECRET: dev-secret
      ADMIN_EMAIL: admin@local
      ADMIN_PASSWORD: senha
      CORS_ORIGIN: "*"
      PORT: "3000"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./apps/backend/src:/workspace/apps/backend/src
      - ./apps/backend/prisma:/workspace/apps/backend/prisma

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    environment:
      # URL da API usada pelo frontend (acessada pelo browser)
      VITE_API_URL: http://localhost:3000
      NODE_OPTIONS: --max-old-space-size=512
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${WEB_PORT:-5173}:5173"
    volumes:
      - ./apps/web:/workspace/apps/web
      - ./packages/ui:/workspace/packages/ui
      - ./packages/config:/workspace/packages/config

volumes:
  dbdata: {}
